
---
title: "Contributing Guidelines ImgLib2" 
listing:
  #contents:    ImgLib2            # all Quarto docs in the `posts` directory will be included on your listing page
  sort: ""                          # can also sort on more than one field
  type: default                     # or `default` or `table`; each type has its own set of yaml options to include
  categories: true                  # allows you to sort posts by assigned categories
  sort-ui: false
  filter-ui: false
page-layout: full
title-block-banner: true
---

# Contributing Guidelines

Thank you for considering contributing to the ImgLib2 open source project! By contributing, you are helping to improve and grow the software for everyone in the community. We appreciate your time and effort.

## Table of Contents

- [Governance](#Governance)
- - [Code of Conduct](#code-of-conduct)
- [Getting Started](#getting-started)
  - [Prerequisites & Setting up the Development Environment](#prerequisites-and-setting-up-the-development-environment)
- [Making Contributions](#making-contributions)
  - [Creating Issues](#creating-issues)
  - [Working on Issues](#working-on-issues)
  - [Submitting Pull Requests](#submitting-pull-requests)
- [Code Guidelines](#code-guidelines)
- [Testing](#testing)
- [Documentation](#documentation)
- [Community](#community)
- [License](#license)

## Governance

Founders: Stephan Saalfeld, Stephan Preibisch
Leads: Tobias Pietzsch, Stephan Preibisch, Stephan Saalfeld – Pietzsch leads on day to day issues. 
Pietzsch, Preibisch and Saalfeld vote on primary decisions, with Pietzsch’s vote breaking ties.
Maintainers: Tobias Pietzsch, Curtis Rueden, Stephan Preibisch, Stephan Saalfeld

And the team role definitions:
Founder - Created the project. Does not imply any current participation or responsibility.
Lead - Has decision-making authority: timing of releases, inclusion of features, etc.
Maintainer - Merges patch submissions. Cuts releases.

## Code of Conduct

Before contributing, please review our [Code of Conduct](our_code_of_conduct.qmd). We aim to foster an inclusive and respectful community where everyone feels safe to participate.

## Getting Started
Need a quick start?  Install OpenJDK and maven:
```
sudo apt install openjdk-16-jdk maven
```

Then check out [BigDataViewer vistools](https://github.com/bigdataviewer/bigdataviewer-vistools):
```
git clone https://github.com/bigdataviewer/bigdataviewer-vistools.git
```

Then start JShell in the BigDataViewer vistools project directory:
```
cd bigdataviewer-vistools
mvn compile com.github.johnpoth:jshell-maven-plugin:1.3:run
```

Then try out this code snippet:
```java
import bdv.util.*;
import net.imglib2.position.FunctionRealRandomAccessible;
import net.imglib2.type.numeric.integer.IntType;
import net.imglib2.util.Intervals;

BdvFunctions.show(
  new FunctionRealRandomAccessible<IntType>(
    2,
    (x, y) -> {
      int i = 0;
      double v = 0,
        c = x.getDoublePosition(0),
        d = x.getDoublePosition(1);
      for (; i < 64 && v < 4096; ++i) {
        final double e = c * c - d * d;
        d = 2 * c * d;
        c = e + 0.2;
        d += 0.6;
        v = Math.sqrt(c * c + d * d);
        ++i;
      }
      y.set(i);
    },
    IntType::new),
  Intervals.createMinMax(-1, -1, 1, 1),
  "",
  BdvOptions.options().is2D()).setDisplayRange(0, 64);
```


## Making Contributions
Please see the general guidlines on how to contribute to an existing plugin or library: [https://imagej.net/develop/improving-the-code](https://imagej.net/develop/improving-the-code)

### Creating Issues

If you find a bug, have a feature request, or encounter any issues, please search our [ImgLib2 issue tracker](https://github.com/imglib/imglib2/issues) and to see if it has already been reported. If not, feel free to create a new issue and provide as much detail as possible. 

### Working on Issues

If you want to work on an existing issue, please follow these steps:

1. Comment on the issue to express your interest in working on it.
2. Fork the repository and create a new branch for your work.
3. Make your changes and commit them with clear commit messages.
4. Ensure your code follows our Code Guidelines.
5. Update the documentation if necessary.
6. Run tests to ensure your changes don't break existing functionality.

### Submitting Pull Requests

1. Push your changes to your forked repository.
2. Create a pull request (PR) from your branch to our main repository's appropriate branch.
3. Provide a detailed description of your changes in the PR.
4. Reference any related issues using keywords (e.g., "Closes #123").
5. Be ready to address feedback and make necessary changes.

## Code Guidelines

- Use consistent code formatting and style throughout the project.
- Follow naming conventions for variables, functions, and classes.
- Ensure your code is well-documented.
- Write meaningful commit messages.

## Testing

Explain how to run tests and provide information about the testing framework used.

## Documentation

If your changes introduce new features or modify existing ones, please update the documentation accordingly. This includes code comments, README files, and any additional documentation files.

## Community

Join in our community discussions on [imagesc.zulipchat.com](https://imagesc.zulipchat.com/) for discussions. For more general questions of broad interest and announcements the [image.sc forum](https://forum.image.sc/) can be used advantageously. We welcome your feedback and ideas.

## License

By contributing to this project, you agree that your contributions will be licensed under the project's license [ImgLib2 license](https://github.com/imglib/imglib2/blob/master/LICENSE.txt) a BSD 2-Clause "Simplified" License. If you're not comfortable with this, please consider refrain from contributing. 

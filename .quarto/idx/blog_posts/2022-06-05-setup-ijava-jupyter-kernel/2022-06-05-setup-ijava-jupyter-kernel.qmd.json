{"title":"Setup the IJava jupyter kernel","markdown":{"yaml":{"title":"Setup the IJava jupyter kernel","author":"Stephan Saalfeld","date":"2022-06-05","categories":["jupyter","ijava","jshell","java","kernel"],"execute":{"echo":true}},"containsRefs":false,"markdown":"\n\nIn this blog, we will show code snippets and examples to make the best use of [ImgLib2](https://github.com/imglib/imglib2), [BigDataViewer](https://github.com/bigdataviewer/bigdataviewer-core), and friends.  ImgLib2 is written to be fast and we will run code that needs to be compiled, so we cannot use any of the various interpreted scripting languages like Python, Groovy, or Javascript.  Instead, we will use the [JShell tool](https://docs.oracle.com/javase/9/jshell/introduction-jshell.htm#JSHEL-GUID-630F27C8-1195-4989-9F6B-2C51D46F52C8) that you can use directly in a terminal or through [Spencer Park's IJava jupyter kernel](https://github.com/SpencerPark/IJava).  You can also follow these tutorials in your own Java project and use your preferred IDE, but Jupyter notebooks are a great teaching tool.  Since jupyter is written in Python and most popular with the Python community, let's follow their ways and first thing create a virtual environment with conda.  The lack of version controlled dependency management for Python projects makes it necessary that practically every project must run in a container or virtual environment because the dependencies of different projects almost inevitably collide.  Conda is the most popular of several attempts to address this situation.  Conda cannot currently be installed from the default Ubuntu repositories, so much about that, but the [installation instructions](https://docs.conda.io/projects/conda/en/latest/user-guide/install/rpm-debian.html) are tolerable, there is a PPA.  Now let's create an environment for jupyter:\n\n```\nconda create -n jshell-jupyter python=3\nconda init bash\nconda activate jshell-jupyter\nconda install jupyter\n```\n\nYou will also need a modern Java and Maven on your system, so if you have not yet done so, install it:\n\n```\nsudo apt install openjdk-17-jdk maven\n```\n\nThe original IJava kernel currently does not build with Java 17 or 18, so we use [Philipp Hanslovsky's](https://github.com/hanslovsky) fork and build and install both the kernel installer and the IJava Jupyter kernel:\n\n```\ngit clone https://github.com/hanslovsky/Jupyter-kernel-installer-gradle.git\ncd Jupyter-kernel-installer-gradle/\ngit checkout try-upgrade-gradle\n./gradlew publishToMavenLocal\n\ncd ..\ngit clone https://github.com/hanslovsky/IJava.git\ncd IJava/\ngit checkout hanslovsky/gradle-7.4.2\n./gradlew installKernel\n```\n\nNow check if the kernel is installed, this should print something like this\n\n```\njupyter kernelspec list\n\nAvailable kernels:\n  java       /home/saalfeld/.local/share/jupyter/kernels/java\n  python3    /home/saalfeld/anaconda3/envs/jshell-jupyter/share/jupyter/kernels/python3\n```\n\nYou can now start the jupyter notebook server\n\n```\njupyter notebook --kernel=java\n```\n\nAnd experiment with the examples.  [Spencer Park's IJava jupyter kernel](https://github.com/SpencerPark/IJava) makes it very easy to include dependencies.  You can include the relevant snippets from a Maven POM into a tagged code block, e.g.\n\n```xml\n%%loadFromPOM\n<repository>\n    <id>scijava.public</id>\n    <url>https://maven.scijava.org/content/groups/public</url>\n</repository>\n<dependency>\n    <groupId>sc.fiji</groupId>\n    <artifactId>bigdataviewer-vistools</artifactId>\n    <version>1.0.0-beta-29</version>\n</dependency>\n```\n\nIf you prefer to run [JShell](https://docs.oracle.com/javase/9/jshell/introduction-jshell.htm#JSHEL-GUID-630F27C8-1195-4989-9F6B-2C51D46F52C8) directly, you can pull in the dependencies from a complete Maven POM with John Pooth's Maven Jshell plugin\n\n```\nmvn compile com.github.johnpoth:jshell-maven-plugin:1.3:run\n```\n\nHappy JShelling!\n\n\nP.S.:\n\nThe original IJava kernel currently does not build with Java 17 or 18, so if you prefer this over the above fork, or if you do not care about the latest greatest language features in Java 17, then the easiest at this time is to use OpenJDK-11.  If you don't have it yet, install it via conda:\n\n```\nconda install openjdk\nconda install -c conda-forge maven\n```\n\nHowever, this may take a day of solving environments, so you can also install it globally:\n\n```\nsudo apt install openjdk-11-jdk maven\n```\n\nIf you have other versions installed, you can switch between them with the `alternatives` tool:\n\n```\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n```\n\nNow check out the original IJava and build and install the kernel IJava Jupyter kernel following [the installation instructions](https://github.com/SpencerPark/IJava#install-from-source) or:\n\n```\ngit clone https://github.com/SpencerPark/IJava.git\ncd IJava/\n./gradlew installKernel\njupyter kernelspec list\n```\n\nDone.\n\n","srcMarkdownNoYaml":"\n\nIn this blog, we will show code snippets and examples to make the best use of [ImgLib2](https://github.com/imglib/imglib2), [BigDataViewer](https://github.com/bigdataviewer/bigdataviewer-core), and friends.  ImgLib2 is written to be fast and we will run code that needs to be compiled, so we cannot use any of the various interpreted scripting languages like Python, Groovy, or Javascript.  Instead, we will use the [JShell tool](https://docs.oracle.com/javase/9/jshell/introduction-jshell.htm#JSHEL-GUID-630F27C8-1195-4989-9F6B-2C51D46F52C8) that you can use directly in a terminal or through [Spencer Park's IJava jupyter kernel](https://github.com/SpencerPark/IJava).  You can also follow these tutorials in your own Java project and use your preferred IDE, but Jupyter notebooks are a great teaching tool.  Since jupyter is written in Python and most popular with the Python community, let's follow their ways and first thing create a virtual environment with conda.  The lack of version controlled dependency management for Python projects makes it necessary that practically every project must run in a container or virtual environment because the dependencies of different projects almost inevitably collide.  Conda is the most popular of several attempts to address this situation.  Conda cannot currently be installed from the default Ubuntu repositories, so much about that, but the [installation instructions](https://docs.conda.io/projects/conda/en/latest/user-guide/install/rpm-debian.html) are tolerable, there is a PPA.  Now let's create an environment for jupyter:\n\n```\nconda create -n jshell-jupyter python=3\nconda init bash\nconda activate jshell-jupyter\nconda install jupyter\n```\n\nYou will also need a modern Java and Maven on your system, so if you have not yet done so, install it:\n\n```\nsudo apt install openjdk-17-jdk maven\n```\n\nThe original IJava kernel currently does not build with Java 17 or 18, so we use [Philipp Hanslovsky's](https://github.com/hanslovsky) fork and build and install both the kernel installer and the IJava Jupyter kernel:\n\n```\ngit clone https://github.com/hanslovsky/Jupyter-kernel-installer-gradle.git\ncd Jupyter-kernel-installer-gradle/\ngit checkout try-upgrade-gradle\n./gradlew publishToMavenLocal\n\ncd ..\ngit clone https://github.com/hanslovsky/IJava.git\ncd IJava/\ngit checkout hanslovsky/gradle-7.4.2\n./gradlew installKernel\n```\n\nNow check if the kernel is installed, this should print something like this\n\n```\njupyter kernelspec list\n\nAvailable kernels:\n  java       /home/saalfeld/.local/share/jupyter/kernels/java\n  python3    /home/saalfeld/anaconda3/envs/jshell-jupyter/share/jupyter/kernels/python3\n```\n\nYou can now start the jupyter notebook server\n\n```\njupyter notebook --kernel=java\n```\n\nAnd experiment with the examples.  [Spencer Park's IJava jupyter kernel](https://github.com/SpencerPark/IJava) makes it very easy to include dependencies.  You can include the relevant snippets from a Maven POM into a tagged code block, e.g.\n\n```xml\n%%loadFromPOM\n<repository>\n    <id>scijava.public</id>\n    <url>https://maven.scijava.org/content/groups/public</url>\n</repository>\n<dependency>\n    <groupId>sc.fiji</groupId>\n    <artifactId>bigdataviewer-vistools</artifactId>\n    <version>1.0.0-beta-29</version>\n</dependency>\n```\n\nIf you prefer to run [JShell](https://docs.oracle.com/javase/9/jshell/introduction-jshell.htm#JSHEL-GUID-630F27C8-1195-4989-9F6B-2C51D46F52C8) directly, you can pull in the dependencies from a complete Maven POM with John Pooth's Maven Jshell plugin\n\n```\nmvn compile com.github.johnpoth:jshell-maven-plugin:1.3:run\n```\n\nHappy JShelling!\n\n\nP.S.:\n\nThe original IJava kernel currently does not build with Java 17 or 18, so if you prefer this over the above fork, or if you do not care about the latest greatest language features in Java 17, then the easiest at this time is to use OpenJDK-11.  If you don't have it yet, install it via conda:\n\n```\nconda install openjdk\nconda install -c conda-forge maven\n```\n\nHowever, this may take a day of solving environments, so you can also install it globally:\n\n```\nsudo apt install openjdk-11-jdk maven\n```\n\nIf you have other versions installed, you can switch between them with the `alternatives` tool:\n\n```\nsudo update-alternatives --config java\nsudo update-alternatives --config javac\n```\n\nNow check out the original IJava and build and install the kernel IJava Jupyter kernel following [the installation instructions](https://github.com/SpencerPark/IJava#install-from-source) or:\n\n```\ngit clone https://github.com/SpencerPark/IJava.git\ncd IJava/\n./gradlew installKernel\njupyter kernelspec list\n```\n\nDone.\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":false,"output-file":"2022-06-05-setup-ijava-jupyter-kernel.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"cosmo","title-block-banner":true,"title":"Setup the IJava jupyter kernel","author":"Stephan Saalfeld","date":"2022-06-05","categories":["jupyter","ijava","jshell","java","kernel"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}